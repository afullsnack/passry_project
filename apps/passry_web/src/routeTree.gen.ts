/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthedRouteRouteImport } from './routes/_authed/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthedExploreRouteImport } from './routes/_authed/explore'
import { Route as AuthedDashboardRouteImport } from './routes/_authed/dashboard'
import { Route as AuthVerify_codeRouteImport } from './routes/_auth/verify_code'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'

const AuthedRouteRoute = AuthedRouteRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedExploreRoute = AuthedExploreRouteImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => AuthedRouteRoute,
} as any)
const AuthedDashboardRoute = AuthedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthedRouteRoute,
} as any)
const AuthVerify_codeRoute = AuthVerify_codeRouteImport.update({
  id: '/_auth/verify_code',
  path: '/verify_code',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/verify_code': typeof AuthVerify_codeRoute
  '/dashboard': typeof AuthedDashboardRoute
  '/explore': typeof AuthedExploreRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/verify_code': typeof AuthVerify_codeRoute
  '/dashboard': typeof AuthedDashboardRoute
  '/explore': typeof AuthedExploreRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_auth/verify_code': typeof AuthVerify_codeRoute
  '/_authed/dashboard': typeof AuthedDashboardRoute
  '/_authed/explore': typeof AuthedExploreRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/verify_code'
    | '/dashboard'
    | '/explore'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/signup' | '/verify_code' | '/dashboard' | '/explore'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/_auth/login'
    | '/_auth/signup'
    | '/_auth/verify_code'
    | '/_authed/dashboard'
    | '/_authed/explore'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRouteRoute: typeof AuthedRouteRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthVerify_codeRoute: typeof AuthVerify_codeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/explore': {
      id: '/_authed/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof AuthedExploreRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
    '/_authed/dashboard': {
      id: '/_authed/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedDashboardRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
    '/_auth/verify_code': {
      id: '/_auth/verify_code'
      path: '/verify_code'
      fullPath: '/verify_code'
      preLoaderRoute: typeof AuthVerify_codeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthedRouteRouteChildren {
  AuthedDashboardRoute: typeof AuthedDashboardRoute
  AuthedExploreRoute: typeof AuthedExploreRoute
}

const AuthedRouteRouteChildren: AuthedRouteRouteChildren = {
  AuthedDashboardRoute: AuthedDashboardRoute,
  AuthedExploreRoute: AuthedExploreRoute,
}

const AuthedRouteRouteWithChildren = AuthedRouteRoute._addFileChildren(
  AuthedRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRouteRoute: AuthedRouteRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthVerify_codeRoute: AuthVerify_codeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
